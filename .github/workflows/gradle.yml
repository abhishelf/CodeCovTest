name: Java CI with Gradle

#on:
#  pull_request:
#    branches: [ "development" ]

on: [workflow_dispatch]

jobs:
  assemble:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Setup Gradle Cache
      - uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}
          gradle-home-cache-cleanup: true
      - name: Assemble Project
        run: ./gradlew assemble
  jvm-verification:
    needs: assemble
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - uses: gradle/gradle-build-action@v2
      - name: build
        run: ./gradlew build
      - name: Unit Test
        run: ./gradlew test
  android-verification:
    needs: assemble
    runs-on: macos-latest
    strategy:
      fail-fast: true
      matrix:
        arch: [ x86_64 ]
        target: [ google_apis ]
        channel: [ stable ]
        api-level:
          - 26
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - uses: gradle/gradle-build-action@v2
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - name: Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedAndroidTest
      - name: Generating Code Coverage Report
        if: ${{ vars.codeCoverageEnabled == 'true' }}
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: ${{ matrix.arch }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew jacocoTestReport
      - name: Uploading Code Coverage Report
        if: ${{ vars.codeCoverageEnabled == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: report
          path: app/build/reports/jacoco/jacocoTestReport
